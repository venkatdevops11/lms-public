pipeline {
  agent {
     label 'docker'
        }
  environment {
     DOCKERHUB_CREDENTIALS = credentials('dockeruser')
     REPO_NAME = yvr522/lms-backend
              }
  stages {
      stage("Create docker image from file") {
        steps {
            sh 'cd api && docker build -t $REPO_NAME:v${BUILD_NUMBER} .'
              }
         }
      stage("Login to Docker account") {
         steps {
            sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
               }
            }

      stage("Pushng the docker image to dockerhub") {
        steps {
           sh 'docker push $REPO_NAME:v${BUILD_NUMBER}'
              }
         }
      stage("Removing local docker image") {
         steps {
            sh 'docker rmi -f $REPO_NAME:v${BUILD_NUMBER}'
               }
         }
      stage("Creating backend containers") {
         steps {
            sh 'docker container rm --force lms-backend'
            sh 'docker container run -d -p 8080:8080 -e DATABASE_URL=postgresql://postgres:welcome1@34.16.36.19:5432/postgres -e MODE=prod -e PORT=8080 --name lms-backend $REPO_NAME:v${BUILD_NUMBER}'
              }
     }
}
}

