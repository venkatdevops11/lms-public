pipeline {
   environment {
     REPONAME = "venkatdevops11/lms"
	 DOCKER_CRED = credentials('dock_cred')
	 POSTGRES_CRED = credentials('postgres')
	 }
   agent {
     label 'docker'
	  }
   stages {
     stage('Build the docker image') {
	  steps {
	    sh 'echo "Building the docker image"'
	    sh 'cd api && docker build -t $REPONAME:$(BUILD_NUMBER) .'
		    }
			
	  Stage('Authenticating with the docker hub') {
        steps {
          sh 'Authenticating with docker'
          sh 'echo $DOCKER_CRED_PSW | docker login -u $DOCKER_CRED_USR --password-stdin'
              }
          }			  
	  
	  stage('Pushing the docker image') {
	    steps {
	      sh 'docker push $REPONAME:$(BUILD_NUMBER)'
	    }
	   }
	  stage('Removing older images') {
	    steps {
		    sh 'docker rmi -f $REPONAME:$(BUILD_NUMBER)'
			}
		}
	   
	  stage('Creating the database container') {
	      steps {
		    sh 'docker container rm -f lms-db'
		    sh 'docker container run -d --name lms-db -p 5432:5432 -e POSTGRES_PASSWORD=$POSTGRES_CRED_PSW postgres'
			}
		}
	
	  stage('Running the docker container') {
	      steps {
		    sh 'docker run -d -p 8080:8080 -e MODE=production -e DATABASE_URL=postgresql://postgres:$POSTGRES_CRED_PSW:5432/postgres --name lms-be $REPONAME:$(BUILD_NUMBER)'
			}
		}
	}
